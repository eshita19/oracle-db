------------SELECT STATMENTS-------------------

-- 1. Select all columns and rows
select * from HR.EMPLOYEES;

--2. Select Specific elements
SELECT EMPLOYEE_ID, FIRST_NAME FROM HR.EMPLOYEES;

--3. Arithmetic operations (+,-,*,/)
SELECT employee_id, (salary*100)/2 from HR.EMPLOYEES;

--4. Null is a value which is unknown, unassigned. It is not equivalent to empty
-- Arithmetic operations on a null value results in null value
select last_name, commission_pct, commission_pct+10 from HR.EMPLOYEES

--5. Alias
select last_name as lname, last_name lastname, last_name " lastttt name" from HR.Employees;

-- 6. Concatenation ||, q'( ) for quotes
select first_name || ' ' || last_name  AS FIRST_LAST from HR.EMPLOYEES;
SELECT FIRST_NAME || q'(WORKS IN DEPARTM'''' ENT )' || DEPARTMENT_ID FROM HR.EMPLOYEES;

--7. Distinct - Unique value OF A COLUMN OR COMBINATION OF COLUMNS
SELECT DISTINCT DEPARTMENT_ID FROM HR.EMPLOYEES;
SELECT DISTINCT DEPARTMENT_ID, JOB_ID FROM HR.EMPLOYEES;

-- 8. DESCRIBE OR DESC - DISPLAYES STRUCTURE OF THE TABLE
DESC HR.EMPLOYEES;
DESCRIBE HR.EMPLOYEES;


------------ RESTRICTING AND SORTING DATA----------

-- 9. LIMITING THE ROWS THAT ARE SELECTED USING WHERE.
-- COMPARISON OPERATORS( =, >, >=, <, <=, <>, BETWEEN .. AND..(INCLUSIVE), IN(SET), LIKE, IS NULL
-- CHARACTER AND DATE VALUES ARE ENCLOSED IN SINGLE QUOTATIONS. 
-- DATA IN WHERE CLAUSE IS CASE SENSITIVE.
-- DATE STRING SHOULD BE IN PROPER FORMAT
SELECT *
FROM HR.EMPLOYEES
WHERE EMPLOYEE_ID=100;

SELECT *
FROM HR.EMPLOYEES
WHERE HIRE_DATE= '17-JUN-03';

SELECT *
FROM HR.EMPLOYEES
WHERE HIRE_DATE > '17-JUN-03';


-- Oracle compares characters of string using ascii code
SELECT * 
FROM HR.EMPLOYEES 
WHERE FIRST_NAME > 'Az'
ORDER BY FIRST_NAME;

-- Between.. AND...
SELECT * 
FROM HR.EMPLOYEES
WHERE SALARY BETWEEN 3000 AND 10000;

SELECT *
FROM HR.EMPLOYEES
WHERE FIRST_NAME BETWEEN 'A' AND 'C' 
ORDER BY FIRST_NAME;

-- IN OPERATOR
SELECT * 
FROM HR.EMPLOYEES
WHERE SALARY IN (3100, 9000); --ORDER DOES NOT MATTER


--LIKE OPERATOR, %: ZERO OR MORE CHARACTER, _: ONE OR MORE CHARACTER
SELECT *
FROM HR.EMPLOYEES
WHERE FIRST_NAME LIKE 'A%';

SELECT *
FROM HR.EMPLOYEES
WHERE JOB_ID LIKE 'SA/_%' ESCAPE '/'; --CONSIDER _ AS A CHARACTER INSTEAD OF SPECIAL CHARACTER


-- IS NULL. SELECT ALL EMPLOYEES WHO DON'T HAVE COMMISSION
SELECT *
FROM HR.EMPLOYEES
WHERE COMMISSION_PCT IS NULL; -- COMMISION_PCT = NULL WILL NOT WORK

-- USING NOT - NOT IN, NOT BETWEEN, NOT LIKE, NOT NULL
SELECT *
FROM HR.EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL;

SELECT *
FROM HR.EMPLOYEES
WHERE JOB_ID NOT LIKE 'SA%';


-- NOT EQUAL TO : <> OR !=
SELECT * 
FROM HR.EMPLOYEES
WHERE MANAGER_ID <> 100;

SELECT *
FROM HR.EMPLOYEES
WHERE MANAGER_ID != 100;


---ORDER BY
--DEFAULT ASC SORT
SELECT FIRST_NAME, LAST_NAME 
FROM HR.EMPLOYEES
ORDER BY FIRST_NAME; 

-- DESC SORT
SELECT FIRST_NAME, LAST_NAME
FROM HR.EMPLOYEES
ORDER BY LAST_NAME DESC; 

-- NULL VALUES COMES LAST IN ASC SORT. USE NULLS FIRST FOR CHANGING BEHAVIOUR
SELECT FIRST_NAME, COMMISSION_PCT
FROM HR.EMPLOYEES
ORDER BY COMMISSION_PCT NULLS FIRST;

--ORDER BY MULTIPLE COLUMNS WIH DIFF SORT ORDER. 2ND COLUMN SORTING WILL HAPPEN WHEN 1ST COLUMN HAS ROWS WITH SAME VALS
SELECT FIRST_NAME, COMMISSION_PCT
FROM HR.EMPLOYEES
ORDER BY COMMISSION_PCT NULLS FIRST, FIRST_NAME DESC;

--ORDER BY COLUMN NUMBER
SELECT FIRST_NAME, COMMISSION_PCT
FROM HR.EMPLOYEES
ORDER BY 2 NULLS FIRST, 1 DESC;

